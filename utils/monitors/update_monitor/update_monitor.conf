# MiSTer Core Update Monitor Configuration
#
# Monitors for core updates and notifies when new versions are available
#

# Check interval in hours (24 = daily)
check_interval_hours=24

# Enable OSD notifications for updates
enable_notifications=true

# Check GitHub releases for updates
check_github_releases=true

# Check update_all script status (experimental)
check_update_all=false

# Auto-check on daemon startup
auto_check_on_startup=true

# GitHub personal access token (optional, for higher API rate limits)
# Create at: https://github.com/settings/tokens
github_token=

# Only notify for cores matching this filter (empty = all cores)
# Example: "SNES,Genesis,NES" or "Amiga" or ""
notification_filter=

# Maximum number of cores to track
max_cores_to_track=100

# Usage:
#
# Manual check (run once and exit):
#   /media/fat/utils/update_monitor --check
#
# Run in foreground for testing:
#   /media/fat/utils/update_monitor -f
#
# Normal daemon mode:
#   /media/fat/utils/update_monitor
#
# The daemon will:
# 1. Scan all .rbf files in _Computer, _Console, and _Arcade directories
# 2. Map cores to their GitHub repositories
# 3. Check GitHub releases API for new versions
# 4. Send OSD notifications when updates are available
# 5. Cache results to avoid excessive API calls
#
# Core Repository Mappings:
# - Amiga/Minimig -> MiSTer-devel/Minimig-AGA_MiSTer
# - ao486 -> MiSTer-devel/ao486_MiSTer
# - SNES -> MiSTer-devel/SNES_MiSTer
# - Genesis -> MiSTer-devel/Genesis_MiSTer
# - NES -> MiSTer-devel/NES_MiSTer
# - GBA -> MiSTer-devel/GBA_MiSTer
# (Add more mappings in the code as needed)
#
# GitHub API Rate Limits:
# - Without token: 60 requests/hour
# - With token: 5000 requests/hour
# Use a personal access token for better rate limits