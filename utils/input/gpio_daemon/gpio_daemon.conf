# MiSTer GPIO Game Launcher Configuration
#
# Configure GPIO pins for direct game launching and rotary encoder browsing
#

# Button configurations
# Format: button=gpio_pin,core,id_type,identifier,description
# gpio_pin: GPIO pin number (use `gpio readall` to see pin layout)
# core: Target core (PSX, SNES, Genesis, etc.)
# id_type: "serial", "title", or "path" 
# identifier: Game serial, title, or file path
# description: Display name for OSD

# Example button configurations for popular games
button=17,PSX,serial,SLUS-00067,Castlevania SOTN
button=18,PSX,serial,SLUS-00594,Final Fantasy VII
button=19,SNES,title,Super Metroid,Super Metroid
button=20,Genesis,title,Sonic the Hedgehog,Sonic 1
button=21,Gameboy,title,Tetris,Tetris GB

# Rotary encoder configuration
# Format: encoder=pin_a,pin_b,pin_button
# pin_a: Encoder signal A pin
# pin_b: Encoder signal B pin  
# pin_button: Encoder push button pin (for selection)
encoder=22,23,24

# Debounce time in milliseconds
debounce_ms=50

# Show OSD notifications for button presses
show_notifications=true

# Games list file for rotary encoder browsing
# This file contains the list of games to browse through
games_list_file=/media/fat/utils/favorite_games.txt

# Hardware Setup:
#
# For Raspberry Pi GPIO (if using Pi GPIO header on MiSTer):
# - Use pull-up resistors on all input pins
# - Connect buttons between GPIO pin and ground
# - Rotary encoder connections:
#   - A signal to GPIO 22
#   - B signal to GPIO 23  
#   - Push button to GPIO 24
#   - Common ground
#
# Button Layout Suggestions:
# - Pin 17: Quick access to most played game
# - Pin 18: Second favorite game
# - Pin 19: Third favorite game
# - Pin 20: Random/surprise game
# - Pin 21: Last played game
#
# For custom PCB or breadboard:
# - Add pull-up resistors (10kÎ©) to VCC
# - Use momentary push buttons
# - Consider adding LED indicators
# - Use debouncing capacitors if needed